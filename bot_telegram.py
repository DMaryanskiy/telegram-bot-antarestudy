import os
import telebot
from telebot import types

from dotenv import load_dotenv


load_dotenv()

bot = telebot.TeleBot(os.getenv("TOKEN"))
bot.remove_webhook()

info = {
    "username": "",
    "course": "",
    "age": "",
    "timezone": "",
    "grade": "",
}

@bot.message_handler(commands=["start"])
def get_text_messages(message, data="start"):
    keyboard_main = types.InlineKeyboardMarkup()

    if data == "start":
        message_content = "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —à–∫–æ–ª—É –ê–Ω—Ç–∞—Ä–µ—Å.\n–ò–∑—É—á–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞-–ø–æ–º–æ—â–Ω–∏–∫–∞, –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –ø–∏—Å–∞—Ç—å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º: @antarestudy"
    if data == "back":
        message_content = "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!\n–£–∑–Ω–∞–π –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –∫—É—Ä—Å–∞—Ö –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º: @antarestudy"

    btn_my_site = types.InlineKeyboardButton(text="–ù–∞—à —Å–∞–π—Ç", url="https://antarestudy.ru")
    btn_info = types.InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–∞—Ö", callback_data="info")

    keyboard_main.add(btn_my_site)
    keyboard_main.add(btn_info)

    return bot.send_message(
        message.chat.id,
        message_content,
        reply_markup = keyboard_main
    )

def get_info(message):
    keyboard_info = types.InlineKeyboardMarkup()

    btn_math_oge = types.InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –û–ì–≠", callback_data="math_oge")
    btn_math_ege = types.InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –ï–ì–≠", callback_data="math_ege")
    btn_physics_oge = types.InlineKeyboardButton(text="–§–∏–∑–∏–∫–∞ –û–ì–≠", callback_data="physics_oge")
    btn_physics_ege = types.InlineKeyboardButton(text="–§–∏–∑–∏–∫–∞ –ï–ì–≠", callback_data="physics_ege")
    btn_back = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back")

    keyboard_info.add(btn_math_ege)
    keyboard_info.add(btn_physics_ege)
    keyboard_info.add(btn_math_oge)
    keyboard_info.add(btn_physics_oge)
    keyboard_info.add(btn_back)

    return bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏ –∫—É—Ä—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ωüëáüèª",
        reply_markup = keyboard_info
    )

def get_subject_info(message, subject):

    doc = open(f"{subject}.pdf", "rb")
    img = open(f"{subject}.png", "rb")

    keyboard_subject = types.InlineKeyboardMarkup()

    btn_url = types.InlineKeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ –∫—É—Ä—Å–∞ –Ω–∞ —Å–∞–π—Ç–µ", url=f"https://antarestudy.ru/{subject}.html")
    btn_back = types.InlineKeyboardButton(text="–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="back")

    keyboard_subject.add(btn_url)
    keyboard_subject.add(btn_back)

    bot.send_message(
        message.chat.id,
        "–ù–∞—à –∫—É—Ä—Å –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤–º–µ—Å—Ç–µ —Å –∫–ª–∞—Å—Å–Ω—ã–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –≤ –¥—Ä—É–∂–Ω–æ–π –≥—Ä—É–ø–ø–µ –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É –∏ —É–≤–µ—Ä–µ–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ —Å–¥–∞—á–µ —ç–∫–∑–∞–º–µ–Ω–∞!üòÑ"
        "\n\n–ó–∞–≥–ª—è–Ω–∏ –≤ —É—á–µ–±–Ω—ã–π –ø–ª–∞–Ω –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ –æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ç–µ–º –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö, –∞ —Ç–∞–∫–∂–µ –æ–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∫—Ä–∏–Ω —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∫—É—Ä—Å–∞."
    )
    bot.send_document(message.chat.id, doc)
    bot.send_photo(message.chat.id, img)
    return bot.send_message(
        message.chat.id,
        "\n\n–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—á–∫–µ –∫—É—Ä—Å–∞ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ:",
        reply_markup=keyboard_subject
    )

@bot.callback_query_handler(func=lambda call:True)
def callback_worker(call):
    if call.data == "info":
        return get_info(call.message)
    elif call.data == "math_oge" or call.data == "math_ege" or call.data == "physics_oge" or call.data == "physics_ege":
        return get_subject_info(call.message, call.data)
    elif call.data == "back":
        return get_text_messages(call.message, call.data)

bot.polling()
